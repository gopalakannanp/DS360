package TestCases;

import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import Pages.HomePage;
import Pages.LoginPage;
import Pages.Reverse_PO_Page;
import TestBase.TestBase;
import Util.TestUtil;


public class Reverse_PO_Page_Test extends TestBase {

	Reverse_PO_Page RPO;

	LoginPage loginpage;

	HomePage homepage;

	static TestUtil util = new TestUtil();

	String sheetName = "Sheet1";

	String sheetName1 = "Sheet2";


	public Reverse_PO_Page_Test() {

		super();
	}

	@DataProvider
	public Object[][] getCRMTestData() {
		Object data[][] = TestUtil.getTestData(sheetName);
		return data;
	}

	@DataProvider
	public Object[][] getCRMTestData1() {
		Object data[][] = TestUtil.getTestData(sheetName1);
		return data;
	}

	@BeforeMethod

	public void setup() throws InterruptedException {

		initialization();

		loginpage = new LoginPage();

		homepage = new HomePage();

		RPO = new Reverse_PO_Page();

		homepage = loginpage.login(prop.getProperty("un"), prop.getProperty("ps"));

		homepage.ClickOnCreateReversePurchaseOrder();

	}

	@Test(dataProvider = "getCRMTestData", enabled = true)

	public void To_Verify_Create_RPO_With_Closed_Status(String Order, String rec, String comm, String serial1,
			String serial2, String serial3, String serial4, String serial5, String serial6, String serial7,
			String serial8, String serial9, String serial10, String serial11, String serial12, String serial13,
			String serial14, String serial15, String serial16, String serial17, String serial18, String serial19,
			String serial20, String serial21, String serial22, String serial23, String serial24, String serial25,
			String serial26, String serial27, String serial28)
			throws InterruptedException {

		String msg = RPO.Create_PO(Order, rec, comm, serial1, serial2, serial3, serial4, serial5, serial6, serial7,
				serial8, serial9, serial10, serial11, serial12, serial13, serial14, serial15, serial16, serial17,
				serial18, serial19, serial20, serial21, serial22, serial23, serial24, serial25, serial26, serial27,
				serial28);

		Assert.assertEquals(msg, "Purchase Order Completed.");

	}

	@Test(dataProvider = "getCRMTestData1", enabled = false)

	public void To_Verify_Create_RPO_with_Partial_Status(String Order, String rec, String Barcode1, String Barcode2,
			String Barcode3, String Barcode4, String Barcode5, String Barcode6, String Barcode7)
			throws InterruptedException {

		String msg = RPO.Create_PO_Partial(Order, rec, Barcode1, Barcode2, Barcode3, Barcode4, Barcode5, Barcode6,
				Barcode7);

		Assert.assertEquals(msg, "Purchase Order Completed.");

	}
}
